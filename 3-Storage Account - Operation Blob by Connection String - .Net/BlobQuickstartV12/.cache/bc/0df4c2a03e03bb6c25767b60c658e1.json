{"id":"node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js","dependencies":[{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-auth\\dist-esm\\src\\tokenCredential.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\package.json","includedInParent":true,"mtime":1605861829311},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-auth\\package.json","includedInParent":true,"mtime":1605861484143}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTokenCredential = isTokenCredential;\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return credential && typeof credential.getToken === \"function\" && (credential.signRequest === undefined || credential.getToken.length > 0);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":16,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":16,"column":9}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":16,"column":26}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":34},"generated":{"line":16,"column":27}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":16,"column":37}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":49},"generated":{"line":16,"column":39}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":17,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":18,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":19,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":20,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":21,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":22,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":22,"column":9}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":14},"generated":{"line":22,"column":19}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":22,"column":23}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":11},"generated":{"line":22,"column":30}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":21},"generated":{"line":22,"column":40}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":22},"generated":{"line":22,"column":41}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":22,"column":49}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":35},"generated":{"line":22,"column":54}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":22,"column":64}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":5},"generated":{"line":22,"column":69}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":15},"generated":{"line":22,"column":79}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":16},"generated":{"line":22,"column":80}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":5},"generated":{"line":22,"column":91}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":32},"generated":{"line":22,"column":96}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":5},"generated":{"line":22,"column":105}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":45},"generated":{"line":22,"column":109}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":55},"generated":{"line":22,"column":119}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":56},"generated":{"line":22,"column":120}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":45},"generated":{"line":22,"column":128}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":65},"generated":{"line":22,"column":129}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":45},"generated":{"line":22,"column":135}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":74},"generated":{"line":22,"column":138}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":22,"column":139}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":22,"column":140}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":23,"column":0}}],"sources":{"../../src/tokenCredential.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n     */\n    spanOptions?: SpanOptions;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: any): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return (\n    credential &&\n    typeof credential.getToken === \"function\" &&\n    (credential.signRequest === undefined || credential.getToken.length > 0)\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"78f9645199cf484a1561349c5797dc5a","cacheData":{"env":{}}}