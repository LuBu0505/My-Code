{"id":"node_modules/@azure/core-tracing/dist-esm/src/tracers/noop/noOpTracer.js","dependencies":[{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpTracer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\package.json","includedInParent":true,"mtime":1605861829311},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-tracing\\package.json","includedInParent":true,"mtime":1605861484135},{"name":"./noOpSpan","loc":{"line":3,"column":25},"parent":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpTracer.js","resolved":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpSpan.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoOpTracer = void 0;\n\nvar _noOpSpan = require(\"./noOpSpan\");\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nvar NoOpTracer =\n/** @class */\nfunction () {\n  function NoOpTracer() {}\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n\n\n  NoOpTracer.prototype.startSpan = function (_name, _options) {\n    return new _noOpSpan.NoOpSpan();\n  };\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n\n\n  NoOpTracer.prototype.getCurrentSpan = function () {\n    return new _noOpSpan.NoOpSpan();\n  };\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n\n\n  NoOpTracer.prototype.withSpan = function (_span, fn) {\n    return fn();\n  };\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n\n\n  NoOpTracer.prototype.bind = function (target, _span) {\n    return target;\n  };\n\n  return NoOpTracer;\n}();\n\nexports.NoOpTracer = NoOpTracer;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":17,"column":4}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":17,"column":14}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":19,"column":12}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":20,"column":11}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":20,"column":21}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":20,"column":24}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":20,"column":25}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":2}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":12}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":22}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":23}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":32}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":35}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":12},"generated":{"line":28,"column":45}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":50}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":28,"column":52}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":60}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":49},"generated":{"line":28,"column":62}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":29,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":29,"column":11}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":29,"column":15}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":29,"column":33}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":29,"column":35}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":19,"column":3},"generated":{"line":30,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":30,"column":3}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":31,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":2}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":12}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":22}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":23}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":37}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":40}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":36,"column":52}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":37,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":37,"column":11}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":37,"column":15}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":37,"column":33}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":37,"column":35}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":26,"column":3},"generated":{"line":38,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":38,"column":3}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":39,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":2}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":12}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":22}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":23}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":31}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":34}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":60},"generated":{"line":46,"column":44}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":49}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":73},"generated":{"line":46,"column":51}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":46,"column":53}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":78},"generated":{"line":46,"column":55}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":47,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":47,"column":11}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":47,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":47,"column":15}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":35,"column":3},"generated":{"line":48,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":48,"column":3}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":49,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":2}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":12}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":22}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":23}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":27}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":30}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":56,"column":40}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":46}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":21},"generated":{"line":56,"column":48}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":56,"column":53}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":33},"generated":{"line":56,"column":55}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":57,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":57,"column":11}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":57,"column":17}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":44,"column":3},"generated":{"line":58,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":58,"column":3}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":60,"column":9}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":60,"column":19}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":61,"column":1}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":61,"column":3}}],"sources":{"../../../../src/tracers/noop/noOpTracer.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"829d6cec82e22b79cb4de9b59fd53522","cacheData":{"env":{}}}