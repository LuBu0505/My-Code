{"id":"node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageRetryPolicyFactory.js","dependencies":[{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\storage-blob\\dist-esm\\storage-blob\\src\\StorageRetryPolicyFactory.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\package.json","includedInParent":true,"mtime":1605861829311},{"name":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\storage-blob\\package.json","includedInParent":true,"mtime":1605861484144},{"name":"./policies/StorageRetryPolicy","loc":{"line":3,"column":59},"parent":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\storage-blob\\dist-esm\\storage-blob\\src\\StorageRetryPolicyFactory.js","resolved":"C:\\LBWorkSpace\\Stroage\\blob-quickstart-v12\\BlobQuickstartV12\\node_modules\\@azure\\storage-blob\\dist-esm\\storage-blob\\src\\policies\\StorageRetryPolicy.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"StorageRetryPolicy\", {\n  enumerable: true,\n  get: function () {\n    return _StorageRetryPolicy.StorageRetryPolicy;\n  }\n});\nObject.defineProperty(exports, \"StorageRetryPolicyType\", {\n  enumerable: true,\n  get: function () {\n    return _StorageRetryPolicy.StorageRetryPolicyType;\n  }\n});\nexports.StorageRetryPolicyFactory = void 0;\n\nvar _StorageRetryPolicy = require(\"./policies/StorageRetryPolicy\");\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n *\n * @export\n * @class StorageRetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar StorageRetryPolicyFactory =\n/** @class */\nfunction () {\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param {StorageRetryOptions} [retryOptions]\n   * @memberof StorageRetryPolicyFactory\n   */\n  function StorageRetryPolicyFactory(retryOptions) {\n    this.retryOptions = retryOptions;\n  }\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageRetryPolicy}\n   * @memberof StorageRetryPolicyFactory\n   */\n\n\n  StorageRetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n    return new _StorageRetryPolicy.StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  };\n\n  return StorageRetryPolicyFactory;\n}();\n\nexports.StorageRetryPolicyFactory = StorageRetryPolicyFactory;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":32,"column":4}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":32,"column":29}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":34,"column":12}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":35,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":40,"column":11}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":40,"column":36}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":14},"generated":{"line":40,"column":37}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":40,"column":49}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":94,"column":48},"generated":{"line":40,"column":51}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":41,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":95,"column":9},"generated":{"line":41,"column":9}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":41,"column":21}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":41,"column":24}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":41,"column":36}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":96,"column":3},"generated":{"line":42,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":98,"column":2},"generated":{"line":43,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":2}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":27}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":28}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":37}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":38}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":53,"column":44}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":2},"generated":{"line":53,"column":47}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":16},"generated":{"line":53,"column":57}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":2},"generated":{"line":53,"column":67}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":43},"generated":{"line":53,"column":69}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":2},"generated":{"line":53,"column":76}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":72},"generated":{"line":53,"column":78}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":54,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":11},"generated":{"line":54,"column":11}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":15},"generated":{"line":54,"column":15}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":11},"generated":{"line":54,"column":53}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":34},"generated":{"line":54,"column":54}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":11},"generated":{"line":54,"column":64}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":46},"generated":{"line":54,"column":66}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":11},"generated":{"line":54,"column":73}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":55},"generated":{"line":54,"column":75}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":60},"generated":{"line":54,"column":80}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":11},"generated":{"line":54,"column":92}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":54,"column":93}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":108,"column":3},"generated":{"line":55,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":106,"column":9},"generated":{"line":55,"column":3}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":109,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":109,"column":0},"generated":{"line":57,"column":9}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":109,"column":0},"generated":{"line":57,"column":34}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":58,"column":1}},{"source":"../../../src/StorageRetryPolicyFactory.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":58,"column":3}}],"sources":{"../../../src/StorageRetryPolicyFactory.ts":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n *\n * @export\n * @interface StorageRetryOptions\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   *\n   * @type {StorageRetryPolicyType}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   *\n   * @type {string}\n   * @memberof StorageRetryOptions\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n *\n * @export\n * @class StorageRetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param {StorageRetryOptions} [retryOptions]\n   * @memberof StorageRetryPolicyFactory\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageRetryPolicy}\n   * @memberof StorageRetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"2c682bedb7394811b97c5a527356d3dd","cacheData":{"env":{}}}